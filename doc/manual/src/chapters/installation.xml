<?xml version="1.0" encoding="utf-8"?>
<chapter
	version="5.0"
	xml:id="chapter.installation"
	xml:lang="en"
	xmlns="http://docbook.org/ns/docbook"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:db="http://docbook.org/ns/docbook"
	>
	
	<title>Installation</title>
	
	<section>
		<title>Generic PHP Installation</title>
		
		<para>
			This is the generic PHP installation instructions.
			They assume that you want to use RapidDataMapper in a any PHP script.
		</para>
		
		<procedure>
			<title>Stand alone installation</title>
			
			<step>
				<para>
					Copy the <filename>Db.php</filename> file and the <filename>Db/</filename> directory into
					your include path, project directory or somewhere else from where it can be reached by <function>include</function>.
				</para>
			</step>
			
			<step>
				<para>
					Include the <filename>Db.php</filename> file, and if you don't have a matching autoloader
					(see <link linkend="chapter.system_requirements.autoloader">Autoloader Requirements</link>),
					call <function>Db::initAutoload()</function>:
				</para>
				
				<example>
					<title>Loading RapidDataMapper and the bundled Autoloader</title>
					
					<programlisting language="php" linenumbering="unnumbered"><![CDATA[<?php

include 'Db.php';

// if you don't have a compatible autoloader:
Db::initAutoload();]]></programlisting>
				</example>
			</step>
			
			<step>
				<para>
					Configure RapidDataMapper, see the <link linkend="chapter.configuration">Configuration</link>
					chapter.
				</para>
			</step>
		</procedure>
		
		<para>
			This also forces you to load your data objects and descriptors manually
			(autoloader, include or whatever).
			See <link linkend="chapter.descriptors.associating">Descriptors:
			Associating descriptors with the class to be mapped</link> to how you associate the descriptors with
			the data objects.
		</para>
	</section>
	
	<section>
		<title>CodeIgniter Installation</title>
		
		<para>
			RapidDataMapper can easily replace CodeIgniter's database abstraction.
			The instructions below will replace the global <varname>$this->db</varname>
			with the default instance of <classname>Db_Connection</classname> from RapidDataMapper,
			instead of CodeIgniter's abstraction.
		</para>
		
		<procedure>
			<title>CodeIgniter Installation</title>
			
			<step>
				<para>
					Copy the <filename>Db.php</filename> file and the <filename>Db/</filename> directory into the
					<filename>application/libraries/</filename> folder.
				</para>
			</step>
			
			<step>
				<para>
					Create the <filename>application/data_model/</filename> and <filename>application/mappercache/</filename>
					directories.
				</para>
			</step>
			
			<step>
				<para>
					Make <filename>application/mappercache/</filename> writeable.
				</para>
			</step>
			
			<step>
				<para>
					Copy the custom classes from <filename>compat/CodeIgniter/libraries/</filename> into
					<filename>application/libraries/</filename>.
				</para>
			</step>
			
			<step>
				<para>
					Add the following code to <filename>application/config/database.php</filename>,
					below the <varname>$active_group</varname> variable:
				</para>
				
				<programlisting language="php"><![CDATA[// should we cache the mappers?
$cache_mappers = FALSE;]]></programlisting>
			</step>
			
			<step>
				<para>
					The default configuration structure of RapidDataMaper is compatible with the format CodeIgniter usesâ€”
					but if you want to expand on it (RapidDataMapper provides additional options), look at the
					<link linkend="chapter.configuration">Configuration</link> section.
				</para>
			</step>
		</procedure>
		
		<para>
			This also includes a special autoloader for the classes placed in the
			<filename>application/data_model/</filename> folder.
			The filenames are the lowercase of the class name and then add "<literal>.php</literal>".
			(This makes for autoloading of both the data classes and the descriptor classes if the
			descriptor classes are named as data object class name + "<literal>Descriptor</literal>".)
		</para>
		
		<note>
			<para>
				I have not tried to use RapidDataMapper together with CodeIgniter's built-in abstraction,
				but should be possible.
			</para>
		</note>
	</section>
	
	<!--<section>
		<title>Symfony Installation</title>
		
		<para>
			TODO
		</para>
	</section>-->
</chapter>